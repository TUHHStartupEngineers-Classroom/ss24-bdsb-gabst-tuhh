---
title: "Tidyverse"
author: "Gabriel Storch"
---

\# Challenge

## Task 1

For task 1, we load, wrangle and visualize the data wrt. to revenue by state.

### Loading of libraries

```{r}
library("readxl")
library("magrittr")
library("tidyverse")
library(lubridate)
```

### Loading and joining of data

Data is stored in content/data, so we have to change the working directory for loading of data. Then we read the data in and join it.

```{r}
setwd("..")
bikes_tbl <- read_excel("./data/01_bike_sales/01_raw_data/bikes.xlsx")
order_lines<-read_excel("./data/01_bike_sales/01_raw_data/orderlines.xlsx")
bikeshops_tbl  <- read_excel("./data/01_bike_sales/01_raw_data/bikeshops.xlsx")
# joining
bikes_orderlines_bikeshops <-order_lines %>%
  left_join(bikes_tbl, by=c("product.id" = "bike.id")) %>%
  left_join(bikeshops_tbl, by=c("customer.id" = "bikeshop.id"))

bikes_orderlines_bikeshops %>% glimpse()
```

### Wrangling

We reuse total price logic for easy plotting and separate location into city and state.

```{r}
bikes_orderlines_bikeshops<-bikes_orderlines_bikeshops %>%  
  mutate(total.price = price * quantity) %>%
  separate(col    = location,
           into   = c("city", "state"),
           sep    = ", ") 
```

### Grouping/Manipulation

We group the data by state and sum up the total price. Then we reuse the sales_text for nicer plotting.

```{r}

sales_by_location<- bikes_orderlines_bikeshops[, c("state", "city", "total.price")] %>%
  group_by(state) %>%
  summarize(sales=sum(total.price)) %>%
  mutate(sales_text = scales::dollar(sales, big.mark = ".", 
                                     decimal.mark = ",", 
                                     prefix = "", 
                                     suffix = " €"))
sales_by_location
```

### Visualization

We visualize the sales data by state. By inspection we find out, that NRW has the most revenue from bike sales.

```{r plot, fig.width=10, fig.height=7}
sales_by_location %>%
  # color by category_1
  ggplot(aes(x = state, y = sales, fill=state)) +
  geom_bar(stat = "identity") +  # bar plot
  geom_label(aes(label = sales_text), position = position_stack(vjust = 0.95), size=2.5
  ) + # adding labels to the bars

  scale_y_continuous(labels = scales::dollar_format(big.mark = ".", 
                                                    decimal.mark = ",", 
                                                    prefix = "", 
                                                    suffix = " €")) +
  theme(axis.text.x = element_text(angle = 45, hjust = 1))+ # changing direction of labels
  labs(title = "Revenue and state",
       subtitle = "North Rhine-Westphalia has most revenue, then Bremen, followed by Bavaria.", x = "State", y = "Revenue", fill = "State") # legend, title and subtitle

```

## Task 2

For task 2, we load, wrangle and visualize the data wrt. revenue by state and year. Loading and wrangling are not necessary, as we can reuse our results from before.

### Grouping

This time we group by location and year.

```{r}
sales_by_location_and_year<-bikes_orderlines_bikeshops[, c("order.date", "state", "city", "total.price")]
sales_by_location_and_year_grouped<- sales_by_location_and_year %>%
  mutate(order.date = year(order.date)) %>%
  group_by(order.date, state) %>%
  summarize(sales=sum(total.price)) %>%
  mutate(sales_text = scales::dollar(sales, big.mark = ".", 
                                     decimal.mark = ",", 
                                     prefix = "", 
                                     suffix = " €"))
sales_by_location_and_year
```

### Visualization

We do two plots, once a facet plot and once a stacked bar plot, as the latter visualizes the proportions quite nicely, while the former helps understand the individual trend.

First the facet plot:

```{r plot2, fig.width=10, fig.height=7}
sales_by_location_and_year_grouped %>%
  # color by category_1
  ggplot(aes(x = order.date, y = sales, fill = state)) +
  # stack
  geom_bar(stat = "identity") +
  geom_label(aes(label = sales_text), position = position_stack(vjust = 0.5), size=2.5
  ) + # Adding labels to the bars
  geom_smooth(method = "lm", se = FALSE) +
  facet_wrap(~state) +  # Facet by state
  scale_y_continuous(labels = scales::dollar_format(big.mark = ".", 
                                                    decimal.mark = ",", 
                                                    prefix = "", 
                                                    suffix = " €")) +
  labs(title = "Revenue by year and state",
       subtitle = "Some states have an upwards trend, some stagnate and few have a slight downward trend.", x = "Year", y = "Revenue", fill = "State")

```

Stacked bar plot:

```{r plot3, fig.width=10, fig.height=7}

sales_by_location_and_year_grouped %>%
  # color by category_1
  ggplot(aes(x = order.date, y = sales, fill = state)) +
  # stack
  geom_bar(stat = "identity") +
  geom_label(aes(label = sales_text), position = position_stack(vjust = 0.5), size=2.5
  ) + # Adding labels to the bars

  scale_y_continuous(labels = scales::dollar_format(big.mark = ".", 
                                                    decimal.mark = ",", 
                                                    prefix = "", 
                                                    suffix = " €")) +
  labs(title = "Revenue by year and state as stacked bar plot.", x = "Year", y = "Revenue", fill = "State")
  

```
