{
  "hash": "3d079a4e3a217a02d10ebcc5005cc7c3",
  "result": {
    "markdown": "---\ntitle: \"Data Visualization\"\nauthor: \"Gabriel Storch\"\n---\n\n# Loading of libraries\n\n::: {.cell hash='04_data_visualization_cache/html/unnamed-chunk-1_ae2434a695fa01f2707ce6ab6c2b445c'}\n\n```{.r .cell-code}\nsuppressWarnings({\n  library(tidyverse)\n  library(scales)\n  library(glue)\n  })\n```\n:::\n\n\n\\# Challenge 1\n\n::: {.cell hash='04_data_visualization_cache/html/unnamed-chunk-2_37b8bf5886b80797905a6c75e4ce4b1a'}\n\n```{.r .cell-code}\ncovid_data_tbl <- read_csv(\"https://covid.ourworldindata.org/data/owid-covid-data.csv\")\n```\n\n::: {.cell-output .cell-output-stderr}\n```\n#> Rows: 392459 Columns: 67\n#> ── Column specification ────────────────────────────────────────────────────────\n#> Delimiter: \",\"\n#> chr   (4): iso_code, continent, location, tests_units\n#> dbl  (62): total_cases, new_cases, new_cases_smoothed, total_deaths, new_dea...\n#> date  (1): date\n#> \n#> ℹ Use `spec()` to retrieve the full column specification for this data.\n#> ℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n```\n:::\n:::\n\n# Subsetting\n\n::: {.cell hash='04_data_visualization_cache/html/unnamed-chunk-3_0c3ac5ebde802187d4cb37df9bf6c5d9'}\n\n```{.r .cell-code}\n# some predicates\nger <- covid_data_tbl$location == \"Germany\"\nuk <- covid_data_tbl$location == \"United Kingdom\"\nfr <- covid_data_tbl$location == \"France\"\nesp <- covid_data_tbl$location == \"Spain\"\nus <- covid_data_tbl$location == \"United States\"\ntime_limit <- covid_data_tbl$date <= date(\"2022-04-19\")\n\n# subsetting data\ncountry_data <- covid_data_tbl[(ger | uk | fr | esp | us) & time_limit,]\n```\n:::\n\n# Function for format labeling of y-axis\n\n::: {.cell hash='04_data_visualization_cache/html/unnamed-chunk-4_7beff34cd75ff8892ad3a6db8af0fd61'}\n\n```{.r .cell-code}\nformat_labels <- function(x) {\n  paste0(format(x / 1e6, scientific = FALSE), \"M\")\n}\n```\n:::\n\n\n# Getting last relevant us/fr cases as number and text. \n\n\n::: {.cell hash='04_data_visualization_cache/html/unnamed-chunk-5_89157c73245330a17391ad39ee091ac8'}\n\n```{.r .cell-code}\nlast_us_cases <- country_data[country_data$location == \"United States\",] |> arrange(date) |> tail(1)\nlast_us_cases <- last_us_cases$total_cases\nsuppressWarnings({\n  last_us_cases_text <- format(last_us_cases, big.mark = \".\")\n})\n\n\nlast_fr_cases <- country_data[country_data$location == \"France\",] |> arrange(date) |> tail(1)\nlast_fr_cases <- last_fr_cases$total_cases\nsuppressWarnings(\n  last_fr_cases_text <- format(last_fr_cases, big.mark = \".\")\n)\n```\n:::\n\n# Plotting\n\n::: {.cell hash='04_data_visualization_cache/html/plot2_9bf0780a41500854759bec45f8bbadf2'}\n\n```{.r .cell-code}\nsuppressWarnings({\n  country_data |> select(date, total_cases, location) |> group_by(location) |> # total cases by location wanted\n    ggplot(aes(date, total_cases, color = location)) + # plotting\n    geom_line() + # line plot\n    theme_minimal() + # minimal theme\n    scale_x_date(labels = date_format(\"%B '%y\"), date_breaks = \"1 month\") + # x axis to monthly \n    theme(axis.text.x = element_text(angle = 45, hjust = 1), legend.position = \"bottom\") + # rotating x-axis text and fixing legend position\n    guides(color = guide_legend(ncol = 3)) + # fixing legend layout  \n    scale_y_continuous(labels = format_labels, breaks = seq(0, 800, by = 50) * 1e6) + # y axis to million (using above function)\n  \n    labs(x = \"\", y = \"Cumulative Cases\", title = \"Confirmed Covid cases in Europe and USA\", subtitle = \"As of 19-04-22\", color = \"Country\") + # labels\n    geom_text(aes(x= date(\"2022-04-19\"), y = last_us_cases, label = glue(\"{last_us_cases_text} (US)\"), color=\"black\"), color=\"black\", hjust=0.8) + # us - deaths\n      geom_text(aes(x= date(\"2022-04-19\"), y = last_fr_cases, label =glue(\"{last_fr_cases_text} (Fr)\"), color=\"black\"), color=\"black\", hjust=0.8, vjust=-0.2) + # fr - deaths (for reference)\n    scale_color_manual(values = rainbow(length(unique(country_data$location)))) # the \"non-default\" color map. Viridis looked even worse.\n})\n```\n\n::: {.cell-output .cell-output-stderr}\n```\n#> Warning in geom_text(aes(x = date(\"2022-04-19\"), y = last_us_cases, label = glue(\"{last_us_cases_text} (US)\"), : All aesthetics have length 1, but the data has 4180 rows.\n#> ℹ Did you mean to use `annotate()`?\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\n#> Warning in geom_text(aes(x = date(\"2022-04-19\"), y = last_fr_cases, label = glue(\"{last_fr_cases_text} (Fr)\"), : All aesthetics have length 1, but the data has 4180 rows.\n#> ℹ Did you mean to use `annotate()`?\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\n#> Warning: Removed 84 rows containing missing values or values outside the scale range\n#> (`geom_line()`).\n```\n:::\n\n::: {.cell-output-display}\n![](04_data_visualization_files/figure-html/plot2-1.png){width=1920}\n:::\n:::\n\n\\# Challenge 2\n\nPlotting death rate by country on a world map.\n\n# Wrangling\n\n::: {.cell hash='04_data_visualization_cache/html/unnamed-chunk-6_b587c331d14aca17f0e63e9c5353e1ad'}\n\n```{.r .cell-code}\n# getting borders \nworld <- map_data(\"world\")\n# mutating covid data names \ncovid_data_tbl <- covid_data_tbl |>  mutate(location = case_when(\n\n    location == \"United Kingdom\" ~ \"UK\",\n    location == \"United States\" ~ \"USA\",\n    location == \"Democratic Republic of Congo\" ~ \"Democratic Republic of the Congo\",\n    TRUE ~ location\n\n  )) %>%\n  distinct()\n\n# create death_by_pop column and take the value for the last recorded date in the dataset\nplot_data <- covid_data_tbl |> mutate(death_by_pop=total_deaths/population) |> filter(date==date(\"2024-04-07\"))\n\n# this is a bit weird; merging/joining puts the \"by\" column first in the result. this breaks the geom_map functionality...\nmerged_data <- merge(world, plot_data[c(\"location\", \"death_by_pop\")], by.x = \"region\", by.y= \"location\", all.x=TRUE)\n# hence i use merge to combine the data, but then just append a column to the original world data\nworld$death_by_pop <- merged_data$death_by_pop\n```\n:::\n\n\n# Visualization\n\n::: {.cell hash='04_data_visualization_cache/html/plot3_c1b5d30617a5d54a8dd9ab1cdc9bf466'}\n\n```{.r .cell-code}\nggplot() +\n  geom_map(data = world, map = world,\n           aes(map_id = region, fill = death_by_pop),\n           color = \"black\") + # basic plot, fill defines based on what the countries are filled, color defines color of country outline\n  expand_limits(x = world$long, y = world$lat)  + # sets width for plot\n  theme_minimal() + # reduces/removes unwanted elements\n  scale_fill_gradient(low = \"red\", high = \"darkred\", na.value = \"darkgray\", labels = percent_format()) + # gradient for fill\n  labs(y= \"\", x=\"\", title=\"Confirmed COVID-19 deaths relative to size of population\", subtitle=\"Around 6.2 million confirmed deaths worldwide.\", fill=\"Mortality Rate\") + # labels\n  theme(axis.text.x = element_blank(), \n        axis.text.y = element_blank()) # theme_minimal would not remove the numbers on the axes, this does.\n```\n\n::: {.cell-output-display}\n![](04_data_visualization_files/figure-html/plot3-1.png){width=1920}\n:::\n:::\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {
      "include-in-header": [
        "<link href=\"../../site_libs/pagedtable-1.1/css/pagedtable.css\" rel=\"stylesheet\" />\r\n<script src=\"../../site_libs/pagedtable-1.1/js/pagedtable.js\"></script>\r\n"
      ]
    },
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}